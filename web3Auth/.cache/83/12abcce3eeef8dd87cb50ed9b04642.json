{"id":"../node_modules/xrpl/dist/npm/models/common/index.js","dependencies":[{"name":"/Users/uthayan/XRPL/node_modules/xrpl/dist/npm/models/common/index.js.map","includedInParent":true,"mtime":1731153522928},{"name":"/Users/uthayan/XRPL/node_modules/xrpl/src/models/common/index.ts","includedInParent":true,"mtime":1731153523286},{"name":"/Users/uthayan/XRPL/test_auth3/package.json","includedInParent":true,"mtime":1731231949110},{"name":"/Users/uthayan/XRPL/node_modules/xrpl/package.json","includedInParent":true,"mtime":1731153522808}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_API_VERSION = exports.RIPPLED_API_V2 = exports.RIPPLED_API_V1 = void 0;\nexports.RIPPLED_API_V1 = 1;\nexports.RIPPLED_API_V2 = 2;\nexports.DEFAULT_API_VERSION = exports.RIPPLED_API_V2;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":7,"column":0}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":7,"column":7}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":7,"column":8}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":1,"column":27},"generated":{"line":7,"column":22}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":1,"column":30},"generated":{"line":7,"column":25}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":1,"column":31},"generated":{"line":7,"column":26}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":2,"column":13},"generated":{"line":8,"column":0}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":2,"column":13},"generated":{"line":8,"column":7}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":2,"column":13},"generated":{"line":8,"column":8}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":2,"column":27},"generated":{"line":8,"column":22}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":2,"column":30},"generated":{"line":8,"column":25}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":2,"column":31},"generated":{"line":8,"column":26}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":9,"column":0}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":9,"column":7}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":9,"column":8}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":3,"column":32},"generated":{"line":9,"column":27}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":3,"column":35},"generated":{"line":9,"column":30}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":3,"column":35},"generated":{"line":9,"column":37}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":3,"column":35},"generated":{"line":9,"column":38}},{"source":"../../../../src/models/common/index.ts","name":null,"original":{"line":3,"column":49},"generated":{"line":9,"column":52}}],"sources":{"../../../../src/models/common/index.ts":"export const RIPPLED_API_V1 = 1\nexport const RIPPLED_API_V2 = 2\nexport const DEFAULT_API_VERSION = RIPPLED_API_V2\nexport type APIVersion = typeof RIPPLED_API_V1 | typeof RIPPLED_API_V2\nexport type LedgerIndex = number | ('validated' | 'closed' | 'current')\n\nexport interface XRP {\n  currency: 'XRP'\n  issuer?: never\n}\n\nexport interface IssuedCurrency {\n  currency: string\n  issuer: string\n}\n\nexport type Currency = IssuedCurrency | XRP\n\nexport interface IssuedCurrencyAmount extends IssuedCurrency {\n  value: string\n}\n\nexport type Amount = IssuedCurrencyAmount | string\n\nexport interface Balance {\n  currency: string\n  issuer?: string\n  value: string\n}\n\nexport interface Signer {\n  Signer: {\n    Account: string\n    TxnSignature: string\n    SigningPubKey: string\n  }\n}\n\nexport interface Memo {\n  Memo: {\n    MemoData?: string\n    MemoType?: string\n    MemoFormat?: string\n  }\n}\n\nexport type StreamType =\n  | 'consensus'\n  | 'ledger'\n  | 'manifests'\n  | 'peer_status'\n  | 'transactions'\n  | 'transactions_proposed'\n  | 'server'\n  | 'validations'\n\nexport interface PathStep {\n  account?: string\n  currency?: string\n  issuer?: string\n}\n\nexport type Path = PathStep[]\n\n/**\n * The object that describes the signer in SignerEntries.\n */\nexport interface SignerEntry {\n  /**\n   * The object that describes the signer in SignerEntries.\n   */\n  SignerEntry: {\n    /**\n     * An XRP Ledger address whose signature contributes to the multi-signature.\n     * It does not need to be a funded address in the ledger.\n     */\n    Account: string\n    /**\n     * The weight of a signature from this signer.\n     * A multi-signature is only valid if the sum weight of the signatures provided meets\n     * or exceeds the signer list's SignerQuorum value.\n     */\n    SignerWeight: number\n    /**\n     * An arbitrary 256-bit (32-byte) field that can be used to identify the signer, which\n     * may be useful for smart contracts, or for identifying who controls a key in a large\n     * organization.\n     */\n    WalletLocator?: string\n  }\n}\n\n/**\n * This information is added to Transactions in request responses, but is not part\n * of the canonical Transaction information on ledger. These fields are denoted with\n * lowercase letters to indicate this in the rippled responses.\n */\nexport interface ResponseOnlyTxInfo {\n  /**\n   * The date/time when this transaction was included in a validated ledger.\n   */\n  date?: number\n  /**\n   * An identifying hash value unique to this transaction, as a hex string.\n   */\n  hash?: string\n  /**\n   * The sequence number of the ledger that included this transaction.\n   */\n  ledger_index?: number\n  /**\n   * The hash of the ledger included this transaction.\n   */\n  ledger_hash?: string\n  /**\n   * @deprecated Alias for ledger_index.\n   */\n  inLedger?: number\n}\n\n/**\n * One offer that might be returned from either an {@link NFTBuyOffersRequest}\n * or an {@link NFTSellOffersRequest}.\n *\n * @category Responses\n */\nexport interface NFTOffer {\n  amount: Amount\n  flags: number\n  nft_offer_index: string\n  owner: string\n  destination?: string\n  expiration?: number\n}\n\n/**\n * One NFToken that might be returned from an {@link NFTInfoResponse}\n *\n * @category Responses\n */\nexport interface NFToken {\n  nft_id: string\n  ledger_index: number\n  owner: string\n  is_burned: boolean\n  flags: number\n  transfer_fee: number\n  issuer: string\n  nft_taxon: number\n  nft_serial: number\n  uri: string\n}\n\nexport interface AuthAccount {\n  AuthAccount: {\n    Account: string\n  }\n}\n\nexport interface XChainBridge {\n  LockingChainDoor: string\n  LockingChainIssue: Currency\n  IssuingChainDoor: string\n  IssuingChainIssue: Currency\n}\n\n/**\n * A PriceData object represents the price information for a token pair.\n *\n */\nexport interface PriceData {\n  PriceData: {\n    /**\n     * The primary asset in a trading pair. Any valid identifier, such as a stock symbol, bond CUSIP, or currency code is allowed.\n     * For example, in the BTC/USD pair, BTC is the base asset; in 912810RR9/BTC, 912810RR9 is the base asset.\n     */\n    BaseAsset: string\n\n    /**\n     * The quote asset in a trading pair. The quote asset denotes the price of one unit of the base asset. For example, in the\n     * BTC/USD pair,BTC is the base asset; in 912810RR9/BTC, 912810RR9 is the base asset.\n     */\n    QuoteAsset: string\n\n    /**\n     * The asset price after applying the Scale precision level. It's not included if the last update transaction didn't include\n     * the BaseAsset/QuoteAsset pair.\n     */\n    AssetPrice?: number | string\n\n    /**\n     * The scaling factor to apply to an asset price. For example, if Scale is 6 and original price is 0.155, then the scaled\n     * price is 155000. Valid scale ranges are 0-10. It's not included if the last update transaction didn't include the\n     * BaseAsset/QuoteAsset pair.\n     */\n    Scale?: number\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"a6ed28981c7133779a47b43d28b20768","cacheData":{"env":{}}}