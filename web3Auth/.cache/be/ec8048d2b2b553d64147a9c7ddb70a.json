{"id":"node_modules/ethereum-cryptography/utils.js","dependencies":[{"name":"/Users/uthayan/XRPL/test_auth3/package.json","includedInParent":true,"mtime":1731231949110},{"name":"/Users/uthayan/XRPL/test_auth3/node_modules/ethereum-cryptography/package.json","includedInParent":true,"mtime":1731231098490},{"name":"@noble/hashes/_assert","loc":{"line":11,"column":42,"index":560},"parent":"/Users/uthayan/XRPL/test_auth3/node_modules/ethereum-cryptography/utils.js","resolved":"/Users/uthayan/XRPL/test_auth3/node_modules/ethereum-cryptography/node_modules/@noble/hashes/_assert.js"},{"name":"@noble/hashes/utils","loc":{"line":17,"column":22,"index":813},"parent":"/Users/uthayan/XRPL/test_auth3/node_modules/ethereum-cryptography/utils.js","resolved":"/Users/uthayan/XRPL/test_auth3/node_modules/ethereum-cryptography/node_modules/@noble/hashes/utils.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nexports.bytesToUtf8 = bytesToUtf8;\nexports.hexToBytes = hexToBytes;\nexports.equalsBytes = equalsBytes;\nexports.wrapHash = wrapHash;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ethereum-cryptography/utils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}}],"sources":{"node_modules/ethereum-cryptography/utils.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nexports.bytesToUtf8 = bytesToUtf8;\nexports.hexToBytes = hexToBytes;\nexports.equalsBytes = equalsBytes;\nexports.wrapHash = wrapHash;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n"},"lineCount":64}},"error":null,"hash":"0ec2d5b1b8f51ae7bbe1d280e82e10a5","cacheData":{"env":{}}}