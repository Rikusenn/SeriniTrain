{"id":"node_modules/micro-ftch/index.js","dependencies":[{"name":"/Users/uthayan/XRPL/test_auth3/package.json","includedInParent":true,"mtime":1731231949110},{"name":"/Users/uthayan/XRPL/test_auth3/node_modules/micro-ftch/package.json","includedInParent":true,"mtime":1731231096604},{"name":"http","loc":{"line":54,"column":25,"index":1534},"parent":"/Users/uthayan/XRPL/test_auth3/node_modules/micro-ftch/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/stream-http/index.js"},{"name":"https","loc":{"line":55,"column":26,"index":1569},"parent":"/Users/uthayan/XRPL/test_auth3/node_modules/micro-ftch/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/https-browserify/index.js"},{"name":"zlib","loc":{"line":56,"column":25,"index":1604},"parent":"/Users/uthayan/XRPL/test_auth3/node_modules/micro-ftch/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/browserify-zlib/lib/index.js"},{"name":"util","loc":{"line":57,"column":34,"index":1647},"parent":"/Users/uthayan/XRPL/test_auth3/node_modules/micro-ftch/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/util/util.js"},{"name":"url","loc":{"line":58,"column":44,"index":1700},"parent":"/Users/uthayan/XRPL/test_auth3/node_modules/micro-ftch/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/url/url.js"},{"name":"buffer","parent":"/Users/uthayan/XRPL/test_auth3/node_modules/micro-ftch/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"},{"name":"process","parent":"/Users/uthayan/XRPL/test_auth3/node_modules/micro-ftch/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/process/browser.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar process = require(\"process\");\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidStatusCodeError = exports.InvalidCertError = void 0;\nconst DEFAULT_OPT = Object.freeze({\n    redirect: true,\n    expectStatusCode: 200,\n    headers: {},\n    full: false,\n    keepAlive: true,\n    cors: false,\n    referrer: false,\n    sslAllowSelfSigned: false,\n    _redirectCount: 0,\n});\nclass InvalidCertError extends Error {\n    constructor(msg, fingerprint256) {\n        super(msg);\n        this.fingerprint256 = fingerprint256;\n    }\n}\nexports.InvalidCertError = InvalidCertError;\nclass InvalidStatusCodeError extends Error {\n    constructor(statusCode) {\n        super(`Request Failed. Status Code: ${statusCode}`);\n        this.statusCode = statusCode;\n    }\n}\nexports.InvalidStatusCodeError = InvalidStatusCodeError;\nfunction detectType(b, type) {\n    if (!type || type === 'text' || type === 'json') {\n        try {\n            let text = new TextDecoder('utf8', { fatal: true }).decode(b);\n            if (type === 'text')\n                return text;\n            try {\n                return JSON.parse(text);\n            }\n            catch (err) {\n                if (type === 'json')\n                    throw err;\n                return text;\n            }\n        }\n        catch (err) {\n            if (type === 'text' || type === 'json')\n                throw err;\n        }\n    }\n    return b;\n}\nlet agents = {};\nfunction fetchNode(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const http = require('http');\n    const https = require('https');\n    const zlib = require('zlib');\n    const { promisify } = require('util');\n    const { resolve: urlResolve } = require('url');\n    const isSecure = !!/^https/.test(url);\n    let opts = {\n        method: options.method || 'GET',\n        headers: { 'Accept-Encoding': 'gzip, deflate, br' },\n    };\n    const compactFP = (s) => s.replace(/:| /g, '').toLowerCase();\n    if (options.keepAlive) {\n        const agentOpt = {\n            keepAlive: true,\n            keepAliveMsecs: 30 * 1000,\n            maxFreeSockets: 1024,\n            maxCachedSessions: 1024,\n        };\n        const agentKey = [\n            isSecure,\n            isSecure && options.sslPinnedCertificates?.map((i) => compactFP(i)).sort(),\n        ].join();\n        opts.agent =\n            agents[agentKey] || (agents[agentKey] = new (isSecure ? https : http).Agent(agentOpt));\n    }\n    if (options.type === 'json')\n        opts.headers['Content-Type'] = 'application/json';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    opts.headers = { ...opts.headers, ...options.headers };\n    if (options.sslAllowSelfSigned)\n        opts.rejectUnauthorized = false;\n    const handleRes = async (res) => {\n        const status = res.statusCode;\n        if (options.redirect && 300 <= status && status < 400 && res.headers['location']) {\n            if (options._redirectCount == 10)\n                throw new Error('Request failed. Too much redirects.');\n            options._redirectCount += 1;\n            return await fetchNode(urlResolve(url, res.headers['location']), options);\n        }\n        if (options.expectStatusCode && status !== options.expectStatusCode) {\n            res.resume();\n            throw new InvalidStatusCodeError(status);\n        }\n        let buf = [];\n        for await (const chunk of res)\n            buf.push(chunk);\n        let bytes = Buffer.concat(buf);\n        const encoding = res.headers['content-encoding'];\n        if (encoding === 'br')\n            bytes = await promisify(zlib.brotliDecompress)(bytes);\n        if (encoding === 'gzip' || encoding === 'deflate')\n            bytes = await promisify(zlib.unzip)(bytes);\n        const body = detectType(bytes, options.type);\n        if (options.full)\n            return { headers: res.headers, status, body };\n        return body;\n    };\n    return new Promise((resolve, reject) => {\n        const handleError = async (err) => {\n            if (err && err.code === 'DEPTH_ZERO_SELF_SIGNED_CERT') {\n                try {\n                    await fetchNode(url, { ...options, sslAllowSelfSigned: true, sslPinnedCertificates: [] });\n                }\n                catch (e) {\n                    if (e && e.fingerprint256) {\n                        err = new InvalidCertError(`Self-signed SSL certificate: ${e.fingerprint256}`, e.fingerprint256);\n                    }\n                }\n            }\n            reject(err);\n        };\n        const req = (isSecure ? https : http).request(url, opts, (res) => {\n            res.on('error', handleError);\n            (async () => {\n                try {\n                    resolve(await handleRes(res));\n                }\n                catch (error) {\n                    reject(error);\n                }\n            })();\n        });\n        req.on('error', handleError);\n        const pinned = options.sslPinnedCertificates?.map((i) => compactFP(i));\n        const mfetchSecureConnect = (socket) => {\n            const fp256 = compactFP(socket.getPeerCertificate()?.fingerprint256 || '');\n            if (!fp256 && socket.isSessionReused())\n                return;\n            if (pinned.includes(fp256))\n                return;\n            req.emit('error', new InvalidCertError(`Invalid SSL certificate: ${fp256} Expected: ${pinned}`, fp256));\n            return req.abort();\n        };\n        if (options.sslPinnedCertificates) {\n            req.on('socket', (socket) => {\n                const hasListeners = socket\n                    .listeners('secureConnect')\n                    .map((i) => (i.name || '').replace('bound ', ''))\n                    .includes('mfetchSecureConnect');\n                if (hasListeners)\n                    return;\n                socket.on('secureConnect', mfetchSecureConnect.bind(null, socket));\n            });\n        }\n        if (options.keepAlive)\n            req.setNoDelay(true);\n        if (opts.body)\n            req.write(opts.body);\n        req.end();\n    });\n}\nconst SAFE_HEADERS = new Set(['Accept', 'Accept-Language', 'Content-Language', 'Content-Type'].map((i) => i.toLowerCase()));\nconst FORBIDDEN_HEADERS = new Set(['Accept-Charset', 'Accept-Encoding', 'Access-Control-Request-Headers', 'Access-Control-Request-Method',\n    'Connection', 'Content-Length', 'Cookie', 'Cookie2', 'Date', 'DNT', 'Expect', 'Host', 'Keep-Alive', 'Origin', 'Referer', 'TE', 'Trailer',\n    'Transfer-Encoding', 'Upgrade', 'Via'].map((i) => i.toLowerCase()));\nasync function fetchBrowser(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const headers = new Headers();\n    if (options.type === 'json')\n        headers.set('Content-Type', 'application/json');\n    let parsed = new URL(url);\n    if (parsed.username) {\n        const auth = btoa(`${parsed.username}:${parsed.password}`);\n        headers.set('Authorization', `Basic ${auth}`);\n        parsed.username = '';\n        parsed.password = '';\n    }\n    url = '' + parsed;\n    for (let k in options.headers) {\n        const name = k.toLowerCase();\n        if (SAFE_HEADERS.has(name) || (options.cors && !FORBIDDEN_HEADERS.has(name)))\n            headers.set(k, options.headers[k]);\n    }\n    let opts = { headers, redirect: options.redirect ? 'follow' : 'manual' };\n    if (!options.referrer)\n        opts.referrerPolicy = 'no-referrer';\n    if (options.cors)\n        opts.mode = 'cors';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    const res = await fetch(url, opts);\n    if (options.expectStatusCode && res.status !== options.expectStatusCode)\n        throw new InvalidStatusCodeError(res.status);\n    const body = detectType(new Uint8Array(await res.arrayBuffer()), options.type);\n    if (options.full)\n        return { headers: Object.fromEntries(res.headers.entries()), status: res.status, body };\n    return body;\n}\nconst IS_NODE = !!(typeof process == 'object' &&\n    process.versions &&\n    process.versions.node &&\n    process.versions.v8);\nfunction fetchUrl(url, options) {\n    const fn = IS_NODE ? fetchNode : fetchBrowser;\n    return fn(url, options);\n}\nexports.default = fetchUrl;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/micro-ftch/index.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/micro-ftch/index.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}}],"sources":{"node_modules/micro-ftch/index.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidStatusCodeError = exports.InvalidCertError = void 0;\nconst DEFAULT_OPT = Object.freeze({\n    redirect: true,\n    expectStatusCode: 200,\n    headers: {},\n    full: false,\n    keepAlive: true,\n    cors: false,\n    referrer: false,\n    sslAllowSelfSigned: false,\n    _redirectCount: 0,\n});\nclass InvalidCertError extends Error {\n    constructor(msg, fingerprint256) {\n        super(msg);\n        this.fingerprint256 = fingerprint256;\n    }\n}\nexports.InvalidCertError = InvalidCertError;\nclass InvalidStatusCodeError extends Error {\n    constructor(statusCode) {\n        super(`Request Failed. Status Code: ${statusCode}`);\n        this.statusCode = statusCode;\n    }\n}\nexports.InvalidStatusCodeError = InvalidStatusCodeError;\nfunction detectType(b, type) {\n    if (!type || type === 'text' || type === 'json') {\n        try {\n            let text = new TextDecoder('utf8', { fatal: true }).decode(b);\n            if (type === 'text')\n                return text;\n            try {\n                return JSON.parse(text);\n            }\n            catch (err) {\n                if (type === 'json')\n                    throw err;\n                return text;\n            }\n        }\n        catch (err) {\n            if (type === 'text' || type === 'json')\n                throw err;\n        }\n    }\n    return b;\n}\nlet agents = {};\nfunction fetchNode(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const http = require('http');\n    const https = require('https');\n    const zlib = require('zlib');\n    const { promisify } = require('util');\n    const { resolve: urlResolve } = require('url');\n    const isSecure = !!/^https/.test(url);\n    let opts = {\n        method: options.method || 'GET',\n        headers: { 'Accept-Encoding': 'gzip, deflate, br' },\n    };\n    const compactFP = (s) => s.replace(/:| /g, '').toLowerCase();\n    if (options.keepAlive) {\n        const agentOpt = {\n            keepAlive: true,\n            keepAliveMsecs: 30 * 1000,\n            maxFreeSockets: 1024,\n            maxCachedSessions: 1024,\n        };\n        const agentKey = [\n            isSecure,\n            isSecure && options.sslPinnedCertificates?.map((i) => compactFP(i)).sort(),\n        ].join();\n        opts.agent =\n            agents[agentKey] || (agents[agentKey] = new (isSecure ? https : http).Agent(agentOpt));\n    }\n    if (options.type === 'json')\n        opts.headers['Content-Type'] = 'application/json';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    opts.headers = { ...opts.headers, ...options.headers };\n    if (options.sslAllowSelfSigned)\n        opts.rejectUnauthorized = false;\n    const handleRes = async (res) => {\n        const status = res.statusCode;\n        if (options.redirect && 300 <= status && status < 400 && res.headers['location']) {\n            if (options._redirectCount == 10)\n                throw new Error('Request failed. Too much redirects.');\n            options._redirectCount += 1;\n            return await fetchNode(urlResolve(url, res.headers['location']), options);\n        }\n        if (options.expectStatusCode && status !== options.expectStatusCode) {\n            res.resume();\n            throw new InvalidStatusCodeError(status);\n        }\n        let buf = [];\n        for await (const chunk of res)\n            buf.push(chunk);\n        let bytes = Buffer.concat(buf);\n        const encoding = res.headers['content-encoding'];\n        if (encoding === 'br')\n            bytes = await promisify(zlib.brotliDecompress)(bytes);\n        if (encoding === 'gzip' || encoding === 'deflate')\n            bytes = await promisify(zlib.unzip)(bytes);\n        const body = detectType(bytes, options.type);\n        if (options.full)\n            return { headers: res.headers, status, body };\n        return body;\n    };\n    return new Promise((resolve, reject) => {\n        const handleError = async (err) => {\n            if (err && err.code === 'DEPTH_ZERO_SELF_SIGNED_CERT') {\n                try {\n                    await fetchNode(url, { ...options, sslAllowSelfSigned: true, sslPinnedCertificates: [] });\n                }\n                catch (e) {\n                    if (e && e.fingerprint256) {\n                        err = new InvalidCertError(`Self-signed SSL certificate: ${e.fingerprint256}`, e.fingerprint256);\n                    }\n                }\n            }\n            reject(err);\n        };\n        const req = (isSecure ? https : http).request(url, opts, (res) => {\n            res.on('error', handleError);\n            (async () => {\n                try {\n                    resolve(await handleRes(res));\n                }\n                catch (error) {\n                    reject(error);\n                }\n            })();\n        });\n        req.on('error', handleError);\n        const pinned = options.sslPinnedCertificates?.map((i) => compactFP(i));\n        const mfetchSecureConnect = (socket) => {\n            const fp256 = compactFP(socket.getPeerCertificate()?.fingerprint256 || '');\n            if (!fp256 && socket.isSessionReused())\n                return;\n            if (pinned.includes(fp256))\n                return;\n            req.emit('error', new InvalidCertError(`Invalid SSL certificate: ${fp256} Expected: ${pinned}`, fp256));\n            return req.abort();\n        };\n        if (options.sslPinnedCertificates) {\n            req.on('socket', (socket) => {\n                const hasListeners = socket\n                    .listeners('secureConnect')\n                    .map((i) => (i.name || '').replace('bound ', ''))\n                    .includes('mfetchSecureConnect');\n                if (hasListeners)\n                    return;\n                socket.on('secureConnect', mfetchSecureConnect.bind(null, socket));\n            });\n        }\n        if (options.keepAlive)\n            req.setNoDelay(true);\n        if (opts.body)\n            req.write(opts.body);\n        req.end();\n    });\n}\nconst SAFE_HEADERS = new Set(['Accept', 'Accept-Language', 'Content-Language', 'Content-Type'].map((i) => i.toLowerCase()));\nconst FORBIDDEN_HEADERS = new Set(['Accept-Charset', 'Accept-Encoding', 'Access-Control-Request-Headers', 'Access-Control-Request-Method',\n    'Connection', 'Content-Length', 'Cookie', 'Cookie2', 'Date', 'DNT', 'Expect', 'Host', 'Keep-Alive', 'Origin', 'Referer', 'TE', 'Trailer',\n    'Transfer-Encoding', 'Upgrade', 'Via'].map((i) => i.toLowerCase()));\nasync function fetchBrowser(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const headers = new Headers();\n    if (options.type === 'json')\n        headers.set('Content-Type', 'application/json');\n    let parsed = new URL(url);\n    if (parsed.username) {\n        const auth = btoa(`${parsed.username}:${parsed.password}`);\n        headers.set('Authorization', `Basic ${auth}`);\n        parsed.username = '';\n        parsed.password = '';\n    }\n    url = '' + parsed;\n    for (let k in options.headers) {\n        const name = k.toLowerCase();\n        if (SAFE_HEADERS.has(name) || (options.cors && !FORBIDDEN_HEADERS.has(name)))\n            headers.set(k, options.headers[k]);\n    }\n    let opts = { headers, redirect: options.redirect ? 'follow' : 'manual' };\n    if (!options.referrer)\n        opts.referrerPolicy = 'no-referrer';\n    if (options.cors)\n        opts.mode = 'cors';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    const res = await fetch(url, opts);\n    if (options.expectStatusCode && res.status !== options.expectStatusCode)\n        throw new InvalidStatusCodeError(res.status);\n    const body = detectType(new Uint8Array(await res.arrayBuffer()), options.type);\n    if (options.full)\n        return { headers: Object.fromEntries(res.headers.entries()), status: res.status, body };\n    return body;\n}\nconst IS_NODE = !!(typeof process == 'object' &&\n    process.versions &&\n    process.versions.node &&\n    process.versions.v8);\nfunction fetchUrl(url, options) {\n    const fn = IS_NODE ? fetchNode : fetchBrowser;\n    return fn(url, options);\n}\nexports.default = fetchUrl;\n"},"lineCount":220}},"error":null,"hash":"cdd457ff6e65cc6e688f62f095eb3acd","cacheData":{"env":{}}}