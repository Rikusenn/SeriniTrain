{"id":"node_modules/@ethereumjs/util/dist/lock.js","dependencies":[{"name":"/Users/uthayan/XRPL/test_auth3/node_modules/@ethereumjs/util/dist/lock.js.map","includedInParent":true,"mtime":1731231098165},{"name":"/Users/uthayan/XRPL/test_auth3/node_modules/@ethereumjs/util/src/lock.ts","includedInParent":true,"mtime":1731231098747},{"name":"/Users/uthayan/XRPL/test_auth3/package.json","includedInParent":true,"mtime":1731231949110},{"name":"/Users/uthayan/XRPL/test_auth3/node_modules/@ethereumjs/util/package.json","includedInParent":true,"mtime":1731231097779}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Lock = void 0;\n// Based on https://github.com/jsoendermann/semaphore-async-await/blob/master/src/Semaphore.ts\nvar Lock = /*#__PURE__*/function () {\n  function Lock() {\n    _classCallCheck(this, Lock);\n    this.permits = 1;\n    this.promiseResolverQueue = [];\n  }\n  /**\n   * Returns a promise used to wait for a permit to become available. This method should be awaited on.\n   * @returns  A promise that gets resolved when execution is allowed to proceed.\n   */\n  return _createClass(Lock, [{\n    key: \"acquire\",\n    value: (function () {\n      var _acquire = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this = this;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.permits > 0)) {\n                _context.next = 3;\n                break;\n              }\n              this.permits -= 1;\n              return _context.abrupt(\"return\", Promise.resolve(true));\n            case 3:\n              return _context.abrupt(\"return\", new Promise(function (resolver) {\n                return _this.promiseResolverQueue.push(resolver);\n              }));\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function acquire() {\n        return _acquire.apply(this, arguments);\n      }\n      return acquire;\n    }()\n    /**\n     * Increases the number of permits by one. If there are other functions waiting, one of them will\n     * continue to execute in a future iteration of the event loop.\n     */\n    )\n  }, {\n    key: \"release\",\n    value: function release() {\n      this.permits += 1;\n      if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n        // eslint-disable-next-line no-console\n        console.warn('Lock.permits should never be > 0 when there is someone waiting.');\n      } else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n        // If there is someone else waiting, immediately consume the permit that was released\n        // at the beginning of this function and let the waiting function resume.\n        this.permits -= 1;\n        var nextResolver = this.promiseResolverQueue.shift();\n        if (nextResolver) {\n          nextResolver(true);\n        }\n      }\n    }\n  }]);\n}();\nexports.Lock = Lock;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/lock.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":16,"column":0}},{"source":"../src/lock.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":17,"column":0}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":13},"generated":{"line":17,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":17},"generated":{"line":17,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":18,"column":2}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":18,"column":11}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":18,"column":16}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":18,"column":18}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":19,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":19,"column":19}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":19,"column":26}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":19,"column":30}},{"source":"../src/lock.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":20,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":20,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":3,"column":10},"generated":{"line":20,"column":9}},{"source":"../src/lock.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":20,"column":16}},{"source":"../src/lock.ts","name":null,"original":{"line":3,"column":28},"generated":{"line":20,"column":19}},{"source":"../src/lock.ts","name":null,"original":{"line":3,"column":29},"generated":{"line":20,"column":20}},{"source":"../src/lock.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":21,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":21,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":4,"column":10},"generated":{"line":21,"column":9}},{"source":"../src/lock.ts","name":null,"original":{"line":4,"column":30},"generated":{"line":21,"column":29}},{"source":"../src/lock.ts","name":null,"original":{"line":4,"column":62},"generated":{"line":21,"column":32}},{"source":"../src/lock.ts","name":null,"original":{"line":4,"column":64},"generated":{"line":21,"column":34}},{"source":"../src/lock.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":22,"column":2}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":23,"column":2}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":27,"column":2}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":27,"column":9}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":27,"column":21}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":27,"column":22}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":27,"column":26}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":28,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":28,"column":7}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":29,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":29,"column":9}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":30,"column":6}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":30,"column":10}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":30,"column":18}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":30,"column":21}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":30,"column":38}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":30,"column":52}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":30,"column":71}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":30,"column":74}},{"source":"../src/lock.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":30,"column":78}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":30,"column":79}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":30,"column":88}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":30,"column":96}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":31,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":31,"column":12}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":31,"column":17}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":32,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":32,"column":15}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":32,"column":34}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":32,"column":37}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":32,"column":41}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":32,"column":51}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":32,"column":60}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":32,"column":68}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":33,"column":10}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":33,"column":28}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":33,"column":36}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":33,"column":37}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":33,"column":41}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":33,"column":44}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":33,"column":52}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":33,"column":53}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":33,"column":57}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":34,"column":12}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":35,"column":14}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":8},"generated":{"line":35,"column":20}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":35,"column":24}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":13},"generated":{"line":35,"column":25}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":20},"generated":{"line":35,"column":32}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":23},"generated":{"line":35,"column":35}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":35,"column":36}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":36,"column":16}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":36,"column":24}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":36,"column":25}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":36,"column":29}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":37,"column":16}},{"source":"../src/lock.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":38,"column":14}},{"source":"../src/lock.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":39,"column":14}},{"source":"../src/lock.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":39,"column":18}},{"source":"../src/lock.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":39,"column":19}},{"source":"../src/lock.ts","name":null,"original":{"line":12,"column":18},"generated":{"line":39,"column":26}},{"source":"../src/lock.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":39,"column":30}},{"source":"../src/lock.ts","name":null,"original":{"line":12,"column":23},"generated":{"line":39,"column":31}},{"source":"../src/lock.ts","name":null,"original":{"line":12,"column":23},"generated":{"line":40,"column":14}},{"source":"../src/lock.ts","name":null,"original":{"line":12,"column":23},"generated":{"line":40,"column":21}},{"source":"../src/lock.ts","name":null,"original":{"line":12,"column":23},"generated":{"line":40,"column":29}},{"source":"../src/lock.ts","name":null,"original":{"line":12,"column":23},"generated":{"line":40,"column":30}},{"source":"../src/lock.ts","name":null,"original":{"line":12,"column":23},"generated":{"line":40,"column":36}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":40,"column":47}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":20},"generated":{"line":40,"column":54}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":21},"generated":{"line":40,"column":55}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":28},"generated":{"line":40,"column":62}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":29},"generated":{"line":40,"column":63}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":33},"generated":{"line":40,"column":67}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":34},"generated":{"line":40,"column":68}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":34},"generated":{"line":41,"column":12}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":34},"generated":{"line":42,"column":14}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":34},"generated":{"line":42,"column":21}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":34},"generated":{"line":42,"column":29}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":34},"generated":{"line":42,"column":30}},{"source":"../src/lock.ts","name":null,"original":{"line":13,"column":34},"generated":{"line":42,"column":36}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":11},"generated":{"line":42,"column":47}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":15},"generated":{"line":42,"column":51}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":22},"generated":{"line":42,"column":58}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":32},"generated":{"line":42,"column":59}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":33},"generated":{"line":42,"column":69}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":41},"generated":{"line":42,"column":77}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":41},"generated":{"line":43,"column":16}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":46},"generated":{"line":43,"column":23}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":50},"generated":{"line":43,"column":28}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":51},"generated":{"line":43,"column":29}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":71},"generated":{"line":43,"column":49}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":72},"generated":{"line":43,"column":50}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":76},"generated":{"line":43,"column":54}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":77},"generated":{"line":43,"column":55}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":85},"generated":{"line":43,"column":63}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":86},"generated":{"line":43,"column":64}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":86},"generated":{"line":44,"column":14}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":44,"column":16}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":45,"column":12}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":46,"column":12}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":47,"column":14}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":47,"column":21}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":47,"column":29}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":47,"column":30}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":47,"column":34}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":48,"column":10}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":49,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":49,"column":11}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":49,"column":18}},{"source":"../src/lock.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":50,"column":6}},{"source":"../src/lock.ts","name":null,"original":{"line":19,"column":3},"generated":{"line":50,"column":7}},{"source":"../src/lock.ts","name":null,"original":{"line":19,"column":3},"generated":{"line":51,"column":6}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":51,"column":15}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":51,"column":22}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":51,"column":23}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":52,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":52,"column":15}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":52,"column":23}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":52,"column":24}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":52,"column":29}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":52,"column":36}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":52,"column":45}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":53,"column":6}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":54,"column":6}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":54,"column":13}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":54,"column":20}},{"source":"../src/lock.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":55,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":56,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":60,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":61,"column":2}},{"source":"../src/lock.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":62,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":62,"column":7}},{"source":"../src/lock.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":63,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":63,"column":9}},{"source":"../src/lock.ts","name":null,"original":{"line":25,"column":9},"generated":{"line":63,"column":11}},{"source":"../src/lock.ts","name":null,"original":{"line":25,"column":9},"generated":{"line":63,"column":20}},{"source":"../src/lock.ts","name":null,"original":{"line":25,"column":16},"generated":{"line":63,"column":27}},{"source":"../src/lock.ts","name":null,"original":{"line":25,"column":16},"generated":{"line":63,"column":28}},{"source":"../src/lock.ts","name":null,"original":{"line":25,"column":16},"generated":{"line":63,"column":30}},{"source":"../src/lock.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":64,"column":6}},{"source":"../src/lock.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":64,"column":10}},{"source":"../src/lock.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":64,"column":11}},{"source":"../src/lock.ts","name":null,"original":{"line":26,"column":16},"generated":{"line":64,"column":18}},{"source":"../src/lock.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":64,"column":22}},{"source":"../src/lock.ts","name":null,"original":{"line":26,"column":21},"generated":{"line":64,"column":23}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":65,"column":6}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":8},"generated":{"line":65,"column":10}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":12},"generated":{"line":65,"column":14}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":13},"generated":{"line":65,"column":15}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":20},"generated":{"line":65,"column":22}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":23},"generated":{"line":65,"column":25}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":24},"generated":{"line":65,"column":26}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":28},"generated":{"line":65,"column":30}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":32},"generated":{"line":65,"column":34}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":33},"generated":{"line":65,"column":35}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":53},"generated":{"line":65,"column":55}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":54},"generated":{"line":65,"column":56}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":60},"generated":{"line":65,"column":62}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":63},"generated":{"line":65,"column":65}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":64},"generated":{"line":65,"column":66}},{"source":"../src/lock.ts","name":null,"original":{"line":28,"column":66},"generated":{"line":65,"column":68}},{"source":"../src/lock.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":66,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":67,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":67,"column":15}},{"source":"../src/lock.ts","name":null,"original":{"line":30,"column":14},"generated":{"line":67,"column":16}},{"source":"../src/lock.ts","name":null,"original":{"line":30,"column":18},"generated":{"line":67,"column":20}},{"source":"../src/lock.ts","name":null,"original":{"line":30,"column":19},"generated":{"line":67,"column":21}},{"source":"../src/lock.ts","name":null,"original":{"line":30,"column":84},"generated":{"line":67,"column":86}},{"source":"../src/lock.ts","name":null,"original":{"line":30,"column":85},"generated":{"line":67,"column":87}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":5},"generated":{"line":68,"column":7}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":11},"generated":{"line":68,"column":13}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":15},"generated":{"line":68,"column":17}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":19},"generated":{"line":68,"column":21}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":20},"generated":{"line":68,"column":22}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":27},"generated":{"line":68,"column":29}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":32},"generated":{"line":68,"column":34}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":33},"generated":{"line":68,"column":35}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":37},"generated":{"line":68,"column":39}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":41},"generated":{"line":68,"column":43}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":42},"generated":{"line":68,"column":44}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":62},"generated":{"line":68,"column":64}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":63},"generated":{"line":68,"column":65}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":69},"generated":{"line":68,"column":71}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":72},"generated":{"line":68,"column":74}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":73},"generated":{"line":68,"column":75}},{"source":"../src/lock.ts","name":null,"original":{"line":31,"column":75},"generated":{"line":68,"column":77}},{"source":"../src/lock.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":69,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":70,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":34,"column":6},"generated":{"line":71,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":71,"column":12}},{"source":"../src/lock.ts","name":null,"original":{"line":34,"column":11},"generated":{"line":71,"column":13}},{"source":"../src/lock.ts","name":null,"original":{"line":34,"column":18},"generated":{"line":71,"column":20}},{"source":"../src/lock.ts","name":null,"original":{"line":34,"column":22},"generated":{"line":71,"column":24}},{"source":"../src/lock.ts","name":null,"original":{"line":34,"column":23},"generated":{"line":71,"column":25}},{"source":"../src/lock.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":72,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":36,"column":12},"generated":{"line":72,"column":12}},{"source":"../src/lock.ts","name":null,"original":{"line":36,"column":24},"generated":{"line":72,"column":24}},{"source":"../src/lock.ts","name":null,"original":{"line":36,"column":27},"generated":{"line":72,"column":27}},{"source":"../src/lock.ts","name":null,"original":{"line":36,"column":31},"generated":{"line":72,"column":31}},{"source":"../src/lock.ts","name":null,"original":{"line":36,"column":32},"generated":{"line":72,"column":32}},{"source":"../src/lock.ts","name":null,"original":{"line":36,"column":52},"generated":{"line":72,"column":52}},{"source":"../src/lock.ts","name":null,"original":{"line":36,"column":53},"generated":{"line":72,"column":53}},{"source":"../src/lock.ts","name":null,"original":{"line":36,"column":58},"generated":{"line":72,"column":58}},{"source":"../src/lock.ts","name":null,"original":{"line":36,"column":58},"generated":{"line":72,"column":59}},{"source":"../src/lock.ts","name":null,"original":{"line":36,"column":60},"generated":{"line":72,"column":60}},{"source":"../src/lock.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":73,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":73,"column":12}},{"source":"../src/lock.ts","name":null,"original":{"line":37,"column":22},"generated":{"line":73,"column":24}},{"source":"../src/lock.ts","name":null,"original":{"line":37,"column":24},"generated":{"line":73,"column":26}},{"source":"../src/lock.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":74,"column":10}},{"source":"../src/lock.ts","name":null,"original":{"line":38,"column":20},"generated":{"line":74,"column":22}},{"source":"../src/lock.ts","name":null,"original":{"line":38,"column":21},"generated":{"line":74,"column":23}},{"source":"../src/lock.ts","name":null,"original":{"line":38,"column":25},"generated":{"line":74,"column":27}},{"source":"../src/lock.ts","name":null,"original":{"line":38,"column":26},"generated":{"line":74,"column":28}},{"source":"../src/lock.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":77,"column":4}},{"source":"../src/lock.ts","name":null,"original":{"line":41,"column":3},"generated":{"line":78,"column":2}},{"source":"../src/lock.ts","name":null,"original":{"line":41,"column":3},"generated":{"line":79,"column":0}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":80,"column":0}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":80,"column":7}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":80,"column":8}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":80,"column":12}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":80,"column":15}},{"source":"../src/lock.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":80,"column":19}}],"sources":{"../src/lock.ts":"// Based on https://github.com/jsoendermann/semaphore-async-await/blob/master/src/Semaphore.ts\nexport class Lock {\n  private permits: number = 1\n  private promiseResolverQueue: Array<(v: boolean) => void> = []\n\n  /**\n   * Returns a promise used to wait for a permit to become available. This method should be awaited on.\n   * @returns  A promise that gets resolved when execution is allowed to proceed.\n   */\n  public async acquire(): Promise<boolean> {\n    if (this.permits > 0) {\n      this.permits -= 1\n      return Promise.resolve(true)\n    }\n\n    // If there is no permit available, we return a promise that resolves once the semaphore gets\n    // signaled enough times that permits is equal to one.\n    return new Promise<boolean>((resolver) => this.promiseResolverQueue.push(resolver))\n  }\n\n  /**\n   * Increases the number of permits by one. If there are other functions waiting, one of them will\n   * continue to execute in a future iteration of the event loop.\n   */\n  public release(): void {\n    this.permits += 1\n\n    if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n      // eslint-disable-next-line no-console\n      console.warn('Lock.permits should never be > 0 when there is someone waiting.')\n    } else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n      // If there is someone else waiting, immediately consume the permit that was released\n      // at the beginning of this function and let the waiting function resume.\n      this.permits -= 1\n\n      const nextResolver = this.promiseResolverQueue.shift()\n      if (nextResolver) {\n        nextResolver(true)\n      }\n    }\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"ba3c0e26ba93160072ccf65064676191","cacheData":{"env":{}}}