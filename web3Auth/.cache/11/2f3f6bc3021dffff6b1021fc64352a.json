{"id":"node_modules/@metamask/utils/dist/logging.js","dependencies":[{"name":"/Users/uthayan/XRPL/test_auth3/node_modules/@metamask/utils/dist/logging.js.map","includedInParent":true,"mtime":1731231098367},{"name":"/Users/uthayan/XRPL/test_auth3/package.json","includedInParent":true,"mtime":1731231949110},{"name":"/Users/uthayan/XRPL/test_auth3/node_modules/@metamask/utils/package.json","includedInParent":true,"mtime":1731231098684},{"name":"debug","loc":{"line":7,"column":40,"index":323},"parent":"/Users/uthayan/XRPL/test_auth3/node_modules/@metamask/utils/dist/logging.js","resolved":"/Users/uthayan/XRPL/test_auth3/node_modules/debug/src/browser.js"}],"generated":{"js":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createModuleLogger = exports.createProjectLogger = void 0;\nvar debug_1 = __importDefault(require(\"debug\"));\nvar globalLogger = (0, debug_1.default)('metamask');\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nfunction createProjectLogger(projectName) {\n  return globalLogger.extend(projectName);\n}\nexports.createProjectLogger = createProjectLogger;\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nfunction createModuleLogger(projectLogger, moduleName) {\n  return projectLogger.extend(moduleName);\n}\nexports.createModuleLogger = createModuleLogger;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/logging.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"../src/logging.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":4}},{"source":"../src/logging.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":11}},{"source":"../src/logging.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":14}},{"source":"../src/logging.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":29}},{"source":"../src/logging.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":30}},{"source":"../src/logging.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":37}},{"source":"../src/logging.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":38}},{"source":"../src/logging.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":45}},{"source":"../src/logging.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":46}},{"source":"../src/logging.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":47}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":13,"column":0}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":13,"column":4}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":18},"generated":{"line":13,"column":16}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":21},"generated":{"line":13,"column":19}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":21},"generated":{"line":13,"column":20}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":21},"generated":{"line":13,"column":21}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":21},"generated":{"line":13,"column":23}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":21},"generated":{"line":13,"column":30}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":21},"generated":{"line":13,"column":31}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":26},"generated":{"line":13,"column":38}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":27},"generated":{"line":13,"column":40}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":37},"generated":{"line":13,"column":50}},{"source":"../src/logging.ts","name":null,"original":{"line":3,"column":38},"generated":{"line":13,"column":51}},{"source":"../src/logging.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":14,"column":0}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":26,"column":0}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":26,"column":9}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":35},"generated":{"line":26,"column":28}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":36},"generated":{"line":26,"column":29}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":55},"generated":{"line":26,"column":40}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":55},"generated":{"line":26,"column":42}},{"source":"../src/logging.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":27,"column":2}},{"source":"../src/logging.ts","name":null,"original":{"line":18,"column":9},"generated":{"line":27,"column":9}},{"source":"../src/logging.ts","name":null,"original":{"line":18,"column":21},"generated":{"line":27,"column":21}},{"source":"../src/logging.ts","name":null,"original":{"line":18,"column":22},"generated":{"line":27,"column":22}},{"source":"../src/logging.ts","name":null,"original":{"line":18,"column":28},"generated":{"line":27,"column":28}},{"source":"../src/logging.ts","name":null,"original":{"line":18,"column":29},"generated":{"line":27,"column":29}},{"source":"../src/logging.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":27,"column":40}},{"source":"../src/logging.ts","name":null,"original":{"line":18,"column":41},"generated":{"line":27,"column":41}},{"source":"../src/logging.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":28,"column":0}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":29,"column":0}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":29,"column":7}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":29,"column":8}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":29,"column":27}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":29,"column":30}},{"source":"../src/logging.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":29,"column":49}},{"source":"../src/logging.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":30,"column":0}},{"source":"../src/logging.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":44,"column":0}},{"source":"../src/logging.ts","name":null,"original":{"line":35,"column":16},"generated":{"line":44,"column":9}},{"source":"../src/logging.ts","name":null,"original":{"line":35,"column":34},"generated":{"line":44,"column":27}},{"source":"../src/logging.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":44,"column":28}},{"source":"../src/logging.ts","name":null,"original":{"line":36,"column":25},"generated":{"line":44,"column":41}},{"source":"../src/logging.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":44,"column":43}},{"source":"../src/logging.ts","name":null,"original":{"line":37,"column":20},"generated":{"line":44,"column":53}},{"source":"../src/logging.ts","name":null,"original":{"line":37,"column":20},"generated":{"line":44,"column":55}},{"source":"../src/logging.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":45,"column":2}},{"source":"../src/logging.ts","name":null,"original":{"line":39,"column":9},"generated":{"line":45,"column":9}},{"source":"../src/logging.ts","name":null,"original":{"line":39,"column":22},"generated":{"line":45,"column":22}},{"source":"../src/logging.ts","name":null,"original":{"line":39,"column":23},"generated":{"line":45,"column":23}},{"source":"../src/logging.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":45,"column":29}},{"source":"../src/logging.ts","name":null,"original":{"line":39,"column":30},"generated":{"line":45,"column":30}},{"source":"../src/logging.ts","name":null,"original":{"line":39,"column":40},"generated":{"line":45,"column":40}},{"source":"../src/logging.ts","name":null,"original":{"line":39,"column":41},"generated":{"line":45,"column":41}},{"source":"../src/logging.ts","name":null,"original":{"line":40,"column":0},"generated":{"line":46,"column":0}},{"source":"../src/logging.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":0}},{"source":"../src/logging.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":7}},{"source":"../src/logging.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":8}},{"source":"../src/logging.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":26}},{"source":"../src/logging.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":29}},{"source":"../src/logging.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":47}}],"sources":{"../src/logging.ts":"import debug, { Debugger } from 'debug';\n\nconst globalLogger = debug('metamask');\n\n/**\n * Creates a logger via the `debug` library whose log messages will be tagged\n * using the name of your project. By default, such messages will be\n * suppressed, but you can reveal them by setting the `DEBUG` environment\n * variable to `metamask:<projectName>`. You can also set this variable to\n * `metamask:*` if you want to see log messages from all MetaMask projects that\n * are also using this function to create their loggers.\n *\n * @param projectName - The name of your project. This should be the name of\n * your NPM package if you're developing one.\n * @returns An instance of `debug`.\n */\nexport function createProjectLogger(projectName: string): Debugger {\n  return globalLogger.extend(projectName);\n}\n\n/**\n * Creates a logger via the `debug` library which is derived from the logger for\n * the whole project whose log messages will be tagged using the name of your\n * module. By default, such messages will be suppressed, but you can reveal them\n * by setting the `DEBUG` environment variable to\n * `metamask:<projectName>:<moduleName>`. You can also set this variable to\n * `metamask:<projectName>:*` if you want to see log messages from the project,\n * or `metamask:*` if you want to see log messages from all MetaMask projects.\n *\n * @param projectLogger - The logger created via {@link createProjectLogger}.\n * @param moduleName - The name of your module. You could use the name of the\n * file where you're using this logger or some other name.\n * @returns An instance of `debug`.\n */\nexport function createModuleLogger(\n  projectLogger: Debugger,\n  moduleName: string,\n): Debugger {\n  return projectLogger.extend(moduleName);\n}\n"},"lineCount":null}},"error":null,"hash":"453c4c5aee1eef2432c4dc8ea2abb6bb","cacheData":{"env":{}}}