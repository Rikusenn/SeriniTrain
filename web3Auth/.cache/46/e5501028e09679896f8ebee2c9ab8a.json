{"id":"../node_modules/xrpl/dist/npm/models/ledger/FeeSettings.js","dependencies":[{"name":"/Users/uthayan/XRPL/node_modules/xrpl/dist/npm/models/ledger/FeeSettings.js.map","includedInParent":true,"mtime":1731153522905},{"name":"/Users/uthayan/XRPL/node_modules/xrpl/src/models/ledger/FeeSettings.ts","includedInParent":true,"mtime":1731153523271},{"name":"/Users/uthayan/XRPL/test_auth3/package.json","includedInParent":true,"mtime":1731231949110},{"name":"/Users/uthayan/XRPL/node_modules/xrpl/package.json","includedInParent":true,"mtime":1731153522808}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FEE_SETTINGS_ID = void 0;\nexports.FEE_SETTINGS_ID = '4BC50C9B0D8515D3EAAE1E74B29A95804346C491EE1A95BF25E4AAB854A6A651';"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/models/ledger/FeeSettings.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":7,"column":0}},{"source":"../../../../src/models/ledger/FeeSettings.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":7,"column":7}},{"source":"../../../../src/models/ledger/FeeSettings.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":7,"column":8}},{"source":"../../../../src/models/ledger/FeeSettings.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":7,"column":23}},{"source":"../../../../src/models/ledger/FeeSettings.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":7,"column":26}},{"source":"../../../../src/models/ledger/FeeSettings.ts","name":null,"original":{"line":7,"column":68},"generated":{"line":7,"column":92}}],"sources":{"../../../../src/models/ledger/FeeSettings.ts":"import { BaseLedgerEntry, HasOptionalPreviousTxnID } from './BaseLedgerEntry'\n\n/**\n * The unique id for the FeeSettings object https://xrpl.org/feesettings.html#feesettings-id-format\n */\nexport const FEE_SETTINGS_ID =\n  '4BC50C9B0D8515D3EAAE1E74B29A95804346C491EE1A95BF25E4AAB854A6A651'\n\nexport interface FeeSettingsPreAmendmentFields {\n  /** The transaction cost of the \"reference transaction\" in drops of XRP as hexadecimal. */\n  BaseFee: string\n  /** The BaseFee translated into \"fee units\". */\n  ReferenceFeeUnits: number\n  /** The base reserve for an account in the XRP Ledger, as drops of XRP. */\n  ReserveBase: number\n  /** The incremental owner reserve for owning objects, as drops of XRP. */\n  ReserveIncrement: number\n}\n\nexport interface FeeSettingsPostAmendmentFields {\n  /** The transaction cost of the \"reference transaction\" in drops of XRP as hexadecimal. */\n  BaseFeeDrops: string\n  /** The base reserve for an account in the XRP Ledger, as drops of XRP. */\n  ReserveBaseDrops: string\n  /** The incremental owner reserve for owning objects, as drops of XRP. */\n  ReserveIncrementDrops: string\n}\n\nexport interface FeeSettingsBase\n  extends BaseLedgerEntry,\n    HasOptionalPreviousTxnID {\n  LedgerEntryType: 'FeeSettings'\n  /**\n   * A bit-map of boolean flags for this object. No flags are defined for this type.\n   */\n  Flags: 0\n}\n\n/**\n * The FeeSettings object type contains the current base transaction cost and\n * reserve amounts as determined by fee voting.\n *\n * The fields will be based on the status of the `XRPFees` amendment.\n * - Before: {@link FeeSettingsPreAmendmentFields}\n * - After: {@link FeeSettingsPostAmendmentFields}\n *\n * @interface\n *\n * @category Ledger Entries\n */\ntype FeeSettings = FeeSettingsBase &\n  (FeeSettingsPreAmendmentFields | FeeSettingsPostAmendmentFields)\n\nexport default FeeSettings\n"},"lineCount":null}},"error":null,"hash":"ec9194eb3494cbc4d0da16debcd6c535","cacheData":{"env":{}}}